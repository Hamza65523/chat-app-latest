{"version":3,"file":"static/js/184.8b74dc83.chunk.js","mappings":"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","sources":["sections/auth/RegisterForm.js","pages/auth/Register.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n// components\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RegisterUser } from \"../../redux/slices/auth\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthRegisterForm() {\r\n  const dispatch = useDispatch();\r\n  const {isLoading} = useSelector((state) => state.auth);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"First name required\"),\r\n    lastName: Yup.string().required(\"Last name required\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"demo@tawk.com\",\r\n    password: \"demo1234\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      // submit data to backend\r\n      dispatch(RegisterUser(data));\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3} mb={4}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n\r\n        <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\r\n          <RHFTextField name=\"firstName\" label=\"First name\" />\r\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\r\n        </Stack>\r\n\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isLoading}\r\n        sx={{\r\n          bgcolor: \"text.primary\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          \"&:hover\": {\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          },\r\n        }}\r\n      >\r\n        Create Account\r\n      </LoadingButton>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Stack, Typography, Link } from '@mui/material';\r\n\r\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\r\nimport AuthSocial from '../../sections/auth/AuthSocial';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Register() {\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\r\n        <Typography variant=\"h4\">Get started with Tawk.</Typography>\r\n\r\n        <Stack direction=\"row\" spacing={0.5}>\r\n          <Typography variant=\"body2\"> Already have an account? </Typography>\r\n\r\n          <Link component={RouterLink} to={\"/auth/login\"} variant=\"subtitle2\">\r\n            Sign in\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n      {/* Form */}\r\n      <RegisterForm  />\r\n\r\n      <Typography\r\n        component=\"div\"\r\n        sx={{ color: 'text.secondary', mt: 3, typography: 'caption', textAlign: 'center' }}\r\n      >\r\n        {'By signing up, I agree to '}\r\n        <Link underline=\"always\" color=\"text.primary\">\r\n          Terms of Service\r\n        </Link>\r\n        {' and '}\r\n        <Link underline=\"always\" color=\"text.primary\">\r\n          Privacy Policy\r\n        </Link>\r\n        .\r\n      </Typography>\r\n\r\n     <AuthSocial />\r\n      </>\r\n  );\r\n}\r\n"],"names":["AuthRegisterForm","dispatch","useDispatch","isLoading","useSelector","state","auth","useState","showPassword","setShowPassword","LoginSchema","Yup","shape","firstName","required","lastName","email","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","errors","formState","onSubmit","data","RegisterUser","error","console","message","Stack","spacing","mb","afterSubmit","Alert","severity","direction","xs","sm","name","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","LoadingButton","fullWidth","color","size","variant","loading","sx","bgcolor","theme","palette","mode","Register","Typography","Link","component","RouterLink","to","mt","typography","textAlign","underline","AuthSocial"],"sourceRoot":""}