{"version":3,"file":"static/js/870.0aaa4feb.chunk.js","mappings":"gOAQe,SAASA,IACtB,OACE,iCACE,UAAC,IAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,GAAI,EAAGC,SAAU,YAA1C,WACE,SAAC,IAAD,CAAYC,QAAQ,KAApB,4BAEA,UAAC,IAAD,CAAOC,UAAU,MAAML,QAAS,GAAhC,WACE,SAAC,IAAD,CAAYI,QAAQ,QAApB,wBAEA,SAAC,IAAD,CACEE,GAAI,iBACJC,UAAWC,EAAAA,GACXJ,QAAQ,YAHV,sCAUJ,SAAC,IAAD,KAEA,SAAC,IAAD,MAGL,C,kSCfc,SAASK,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEOC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAzBH,UAEDI,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KACJG,SAAS,qBACTD,MAAM,uCACTE,SAAUJ,EAAAA,KAAaG,SAAS,0BAQ5BE,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,UAAUC,EAAAA,EAAAA,GAAYT,GACtBU,cAPoB,CACpBP,MAAO,gBACPE,SAAU,cASVM,EAIEL,EAJFK,MACAC,EAGEN,EAHFM,SACAC,EAEEP,EAFFO,aACaC,EACXR,EADFS,UAAaD,OAGTE,EAAQ,yCAAG,WAAOC,GAAP,sEACf,IACEC,QAAQC,IAAIF,GAEZ1B,GAAS6B,EAAAA,EAAAA,IAAUH,GAQpB,CAPC,MAAOI,GACPH,QAAQG,MAAMA,GACdV,IACAC,EAAS,eAAD,QAAC,UACJS,GADG,IAENC,QAASD,EAAMC,UAElB,CAZc,2CAAH,sDAed,OACE,UAAC,KAAD,CAAchB,QAASA,EAASU,SAAUH,EAAaG,GAAvD,WACE,UAAC,IAAD,CAAOnC,QAAS,EAAhB,YACKiC,EAAOS,cACR,SAAC,IAAD,CAAOC,SAAS,QAAhB,SAAyBV,EAAOS,YAAYD,WAG9C,SAAC,KAAD,CAAcG,KAAK,QAAQC,MAAM,mBAEjC,SAAC,KAAD,CACED,KAAK,WACLC,MAAM,WACNC,KAAMjC,EAAe,OAAS,WAC9BkC,WAAY,CACVC,cACE,SAAC,IAAD,CAAgB7C,SAAS,MAAzB,UACE,SAAC,IAAD,CACE8C,QAAS,kBAAMnC,GAAiBD,EAAvB,EACTqC,KAAK,MAFP,SAIGrC,GAAe,SAAC,IAAD,KAAU,SAAC,IAAD,eAQtC,SAAC,IAAD,CAAOsC,WAAW,WAAWlD,GAAI,CAAEmD,GAAI,GAAvC,UACE,SAAC,IAAD,CAAM7C,UAAWC,EAAAA,GAAYF,GAAG,uBAAuBF,QAAQ,QAAQiD,MAAM,UAAUC,UAAU,SAAjG,iCAKF,SAAC,IAAD,CACEC,WAAS,EACTF,MAAM,UACNG,KAAK,QACLV,KAAK,SACL1C,QAAQ,YACRqD,QAAS1C,EACTd,GAAI,CACFyD,QAAS,eACTL,MAAO,SAACM,GAAD,MACkB,UAAvBA,EAAMC,QAAQC,KAAmB,eAAiB,UAD7C,EAEP,UAAW,CACTH,QAAS,eACTL,MAAO,SAACM,GAAD,MACkB,UAAvBA,EAAMC,QAAQC,KAAmB,eAAiB,UAD7C,IAbb,qBAsBL,C","sources":["pages/auth/Login.js","sections/auth/LoginForm.js"],"sourcesContent":["import { Link as RouterLink } from \"react-router-dom\";\r\n// sections\r\nimport { Stack, Typography, Link } from \"@mui/material\";\r\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\r\nimport Login from \"../../sections/auth/LoginForm\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\r\n        <Typography variant=\"h4\">Login to Tawk</Typography>\r\n\r\n        <Stack direction=\"row\" spacing={0.5}>\r\n          <Typography variant=\"body2\">New user?</Typography>\r\n\r\n          <Link\r\n            to={\"/auth/register\"}\r\n            component={RouterLink}\r\n            variant=\"subtitle2\"\r\n          >\r\n            Create an account\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n      {/* Form */}\r\n      <Login />\r\n\r\n      <AuthSocial />\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n// components\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport { LoginUser } from \"../../redux/slices/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthLoginForm() {\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const {isLoading} = useSelector((state) => state.auth);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: \"demo@tawk.com\",\r\n    password: \"demo1234\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      console.log(data);\r\n      // submit data to backend\r\n      dispatch(LoginUser(data));\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\r\n        <Link component={RouterLink} to=\"/auth/reset-password\" variant=\"body2\" color=\"inherit\" underline=\"always\">\r\n          Forgot password?\r\n        </Link>\r\n      </Stack>\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isLoading}\r\n        sx={{\r\n          bgcolor: \"text.primary\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          \"&:hover\": {\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          },\r\n        }}\r\n      >\r\n        Login\r\n      </LoadingButton>\r\n    </FormProvider>\r\n  );\r\n}\r\n"],"names":["LoginPage","spacing","sx","mb","position","variant","direction","to","component","RouterLink","AuthLoginForm","dispatch","useDispatch","useState","showPassword","setShowPassword","isLoading","useSelector","state","auth","LoginSchema","Yup","shape","email","required","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","errors","formState","onSubmit","data","console","log","LoginUser","error","message","afterSubmit","severity","name","label","type","InputProps","endAdornment","onClick","edge","alignItems","my","color","underline","fullWidth","size","loading","bgcolor","theme","palette","mode"],"sourceRoot":""}