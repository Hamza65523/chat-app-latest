{"version":3,"file":"static/js/209.d733aa52.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","sections/dashboard/Settings/ProfileForm.js","pages/dashboard/Settings/Profile.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Image = forwardRef(\r\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\r\n    const content = (\r\n      <Box\r\n        component={LazyLoadImage}\r\n        wrapperClassName=\"wrapper\"\r\n        effect={disabledEffect ? undefined : effect}\r\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\r\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\r\n        {...other}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Box\r\n        ref={ref}\r\n        component=\"span\"\r\n        sx={{\r\n          lineHeight: 1,\r\n          display: 'block',\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n          '& .wrapper': {\r\n            width: 1,\r\n            height: 1,\r\n            backgroundSize: 'cover !important',\r\n          },\r\n          ...sx,\r\n        }}\r\n      >\r\n        {content}\r\n      </Box>\r\n    );\r\n  }\r\n);\r\n\r\nImage.propTypes = {\r\n  sx: PropTypes.object,\r\n  effect: PropTypes.string,\r\n  disabledEffect: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import PropTypes from 'prop-types';\r\n//\r\nimport Image from '../../Image';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAvatarPreview.propTypes = {\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nexport default function AvatarPreview({ file }) {\r\n  if (!file) {\r\n    return null;\r\n  }\r\n\r\n  const imgUrl = typeof file === 'string' ? file : file.preview;\r\n\r\n  return (\r\n    <Image\r\n      alt=\"avatar\"\r\n      src={imgUrl}\r\n      sx={{\r\n        zIndex: 8,\r\n        overflow: 'hidden',\r\n        borderRadius: '50%',\r\n        position: 'absolute',\r\n        width: `calc(100% - 16px)`,\r\n        height: `calc(100% - 16px)`,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n// @mui\r\nimport { Typography } from \"@mui/material\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n//\r\nimport AvatarPreview from \"./preview/AvatarPreview\";\r\nimport { Image } from \"phosphor-react\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\r\n  width: 144,\r\n  height: 144,\r\n  margin: \"auto\",\r\n  display: \"flex\",\r\n  cursor: \"pointer\",\r\n  overflow: \"hidden\",\r\n  borderRadius: \"50%\",\r\n  alignItems: \"center\",\r\n  position: \"relative\",\r\n  justifyContent: \"center\",\r\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\r\n}));\r\n\r\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\r\n  zIndex: 7,\r\n  display: \"flex\",\r\n  borderRadius: \"50%\",\r\n  position: \"absolute\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  width: `calc(100% - 16px)`,\r\n  height: `calc(100% - 16px)`,\r\n  color: theme.palette.text.disabled,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  transition: theme.transitions.create(\"opacity\", {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter,\r\n  }),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadAvatar.propTypes = {\r\n  sx: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  helperText: PropTypes.node,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nexport default function UploadAvatar({\r\n  error,\r\n  file,\r\n  disabled,\r\n  helperText,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    multiple: false,\r\n    disabled,\r\n    ...other,\r\n  });\r\n\r\n  const hasFile = !!file;\r\n\r\n  const isError = isDragReject || !!error;\r\n\r\n  return (\r\n    <>\r\n      <StyledDropZone\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && {\r\n            opacity: 0.72,\r\n          }),\r\n          ...(isError && {\r\n            borderColor: \"error.light\",\r\n            ...(hasFile && {\r\n              bgcolor: \"error.lighter\",\r\n            }),\r\n          }),\r\n          ...(disabled && {\r\n            opacity: 0.48,\r\n            pointerEvents: \"none\",\r\n          }),\r\n          ...(hasFile && {\r\n            \"&:hover\": {\r\n              \"& .placeholder\": {\r\n                opacity: 1,\r\n              },\r\n            },\r\n          }),\r\n          ...sx,\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        {hasFile && <AvatarPreview file={file} />}\r\n\r\n        <StyledPlaceholder\r\n          className=\"placeholder\"\r\n          sx={{\r\n            \"&:hover\": {\r\n              opacity: 0.72,\r\n            },\r\n            ...(hasFile && {\r\n              zIndex: 9,\r\n              opacity: 0,\r\n              color: \"common.white\",\r\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\r\n            }),\r\n            ...(isError && {\r\n              color: \"error.main\",\r\n              bgcolor: \"error.lighter\",\r\n            }),\r\n          }}\r\n        >\r\n          <Image />\r\n\r\n          <Typography variant=\"caption\">\r\n            {file ? \"Update photo\" : \"Upload photo\"}\r\n          </Typography>\r\n        </StyledPlaceholder>\r\n      </StyledDropZone>\r\n\r\n      {helperText && helperText}\r\n    </>\r\n  );\r\n}","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { FormHelperText } from '@mui/material';\r\n//\r\nimport { UploadAvatar } from '../upload';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFUploadAvatar.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function RHFUploadAvatar({ name, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <div>\r\n          <UploadAvatar\r\n            accept={{\r\n              'image/*': [],\r\n            }}\r\n            error={!!error}\r\n            file={field.value}\r\n            {...other}\r\n          />\r\n\r\n          {!!error && (\r\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\r\n              {error.message}\r\n            </FormHelperText>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { TextField } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          fullWidth\r\n          \r\n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport FormProvider from \"../../../components/hook-form/FormProvider\";\r\nimport { RHFTextField, RHFUploadAvatar } from \"../../../components/hook-form\";\r\nimport { Stack } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UpdateUserProfile } from \"../../../redux/slices/app\";\r\nimport { AWS_S3_REGION, S3_BUCKET_NAME } from \"../../../config\";\r\n\r\nconst ProfileForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [file, setFile] = useState();\r\n  const { user } = useSelector((state) => state.app);\r\n\r\n  const ProfileSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"Name is required\"),\r\n    about: Yup.string().required(\"About is required\"),\r\n    avatar: Yup.string().required(\"Avatar is required\").nullable(true),\r\n  });\r\n\r\n  const defaultValues = {\r\n    firstName: user?.firstName,\r\n    about: user?.about,\r\n    avatar: `https://${S3_BUCKET_NAME}.s3.${AWS_S3_REGION}.amazonaws.com/${user?.avatar}`,\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ProfileSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isSubmitSuccessful },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //   Send API request\r\n      console.log(\"DATA\", data);\r\n      dispatch(\r\n        UpdateUserProfile({\r\n          firstName: data?.firstName,\r\n          about: data?.about,\r\n          avatar: file,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      setFile(file);\r\n\r\n      const newFile = Object.assign(file, {\r\n        preview: URL.createObjectURL(file),\r\n      });\r\n\r\n      if (file) {\r\n        setValue(\"avatar\", newFile, { shouldValidate: true });\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={4}>\r\n        <RHFUploadAvatar name=\"avatar\" maxSize={3145728} onDrop={handleDrop} />\r\n\r\n        <RHFTextField\r\n          helperText={\"This name is visible to your contacts\"}\r\n          name=\"firstName\"\r\n          label=\"First Name\"\r\n        />\r\n        <RHFTextField multiline rows={4} name=\"about\" label=\"About\" />\r\n\r\n        <Stack direction={\"row\"} justifyContent=\"end\">\r\n          <LoadingButton\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            // loading={isSubmitSuccessful || isSubmitting}\r\n          >\r\n            Save\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { CaretLeft } from \"phosphor-react\";\r\nimport ProfileForm from \"../../../sections/dashboard/Settings/ProfileForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FetchUserProfile } from \"../../../redux/slices/app\";\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(FetchUserProfile());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n        {/* Left Pane */}\r\n        <Box\r\n          sx={{\r\n            overflowY: \"scroll\",\r\n\r\n            height: \"100vh\",\r\n            width: 320,\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n          }}\r\n        >\r\n          <Stack p={4} spacing={5}>\r\n            {/* Header */}\r\n            <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\r\n              <IconButton>\r\n                <CaretLeft size={24} color={\"#4B4B4B\"} />\r\n              </IconButton>\r\n\r\n              <Typography variant=\"h5\">Profile</Typography>\r\n            </Stack>\r\n\r\n            {/* Profile Edit Form */}\r\n            <ProfileForm />\r\n          </Stack>\r\n        </Box>\r\n\r\n        {/* Right Pane */}\r\n        <Box\r\n          sx={{\r\n            height: \"100%\",\r\n            width: \"calc(100vw - 420px )\",\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === \"light\"\r\n                ? \"#FFF\"\r\n                : theme.palette.background.paper,\r\n            borderBottom: \"6px solid #0162C4\",\r\n          }}\r\n        ></Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["FormProvider","children","onSubmit","methods","forwardRef","ref","disabledEffect","effect","sx","other","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","alt","src","zIndex","borderRadius","StyledDropZone","styled","theme","margin","cursor","alignItems","justifyContent","border","alpha","palette","grey","StyledPlaceholder","flexDirection","color","text","disabled","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","error","helperText","useDropzone","multiple","getRootProps","getInputProps","isDragActive","hasFile","isError","isDragReject","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","dispatch","useDispatch","useState","setFile","user","useSelector","state","app","ProfileSchema","Yup","shape","firstName","required","about","avatar","nullable","defaultValues","S3_BUCKET_NAME","AWS_S3_REGION","useForm","resolver","yupResolver","watch","reset","setValue","handleSubmit","formState","isSubmitting","isSubmitSuccessful","data","console","log","UpdateUserProfile","handleDrop","useCallback","acceptedFiles","newFile","Object","assign","URL","createObjectURL","shouldValidate","Stack","spacing","maxSize","onDrop","label","multiline","rows","direction","LoadingButton","size","type","useEffect","FetchUserProfile","overflowY","mode","boxShadow","p","IconButton","paper","borderBottom","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","CaretLeft","props","IconBase","displayName"],"sourceRoot":""}